{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\angie\\\\Desktop\\\\REACT\\\\projects\\\\http-setup\\\\src\\\\hoc\\\\asyncComponent.js\";\nimport React, { Component } from 'react'; // the code below will help load a component asynchronously only when it's needed\n\nvar asyncComponent = function asyncComponent(importComponent) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(_class2, _Component);\n\n      function _class2() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, _class2);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          component: null\n        };\n        return _this;\n      }\n\n      _createClass(_class2, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          importComponent().then(function (cmp) {\n            _this2.setState({\n              component: cmp.default\n            });\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var C = this.state.component;\n          return C ? React.createElement(C, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          })) : null;\n        }\n      }]);\n\n      return _class2;\n    }(Component)\n  );\n};\n\nexport default asyncComponent;","map":{"version":3,"sources":["C:\\Users\\angie\\Desktop\\REACT\\projects\\http-setup\\src\\hoc\\asyncComponent.js"],"names":["React","Component","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD,EAAqB;AACxC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,cACIC,KADJ,GACY;AACJC,UAAAA,SAAS,EAAE;AADP,SADZ;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAKwB;AAAA;;AAChBF,UAAAA,eAAe,GACVG,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAA,MAAI,CAACC,QAAL,CAAc;AAACH,cAAAA,SAAS,EAAEE,GAAG,CAACE;AAAhB,aAAd;AACH,WAHL;AAIH;AAVL;AAAA;AAAA,iCAYa;AACL,cAAMC,CAAC,GAAG,KAAKN,KAAL,CAAWC,SAArB;AACA,iBAAOK,CAAC,GAAG,oBAAC,CAAD,oBAAO,KAAKC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GAA2B,IAAnC;AACH;AAfL;;AAAA;AAAA,MAAqBV,SAArB;AAAA;AAiBH,CAlBD;;AAoBA,eAAeC,cAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// the code below will help load a component asynchronously only when it's needed\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null; \r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;"]},"metadata":{},"sourceType":"module"}